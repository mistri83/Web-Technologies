package Sql_Con;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class Datacon {

Connection con;
public Connection gConnection(){
	try {
		Class.forName("com.mysql.cj.jdbc.Driver");
		con=DriverManager.getConnection("jdbc:mysql://localhost:3307/project1","root", "");
	} catch (ClassNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
	return con;
	
}

}



package Sql_Con;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Servlet implementation class deletedata
 */
@WebServlet("/deletedata")
public class deletedata extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public deletedata() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Connection con;
		Datacon data = new Datacon();
		con=data.gConnection();
		String id1=request.getParameter("id");
		int j =Integer.parseInt(id1);
		try {
			PreparedStatement psmt = con.prepareStatement("delete from application where id=?");
			psmt.setInt(1, j);
			psmt.executeUpdate();
			if(j>0) {
				RequestDispatcher rd = request.getRequestDispatcher("showdata.jsp");
				rd.forward(request, response);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}



package Sql_Con;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Servlet implementation class insertdata
 */
@WebServlet("/insertdata")
public class insertdata extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public insertdata() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Connection con;
		Datacon data = new Datacon();
		con=data.gConnection();
		String username = request.getParameter("full-name");
		String email = request.getParameter("your-email");
		String password = request.getParameter("password");
		try {
			PreparedStatement psmt =con.prepareStatement("insert into application(Fullname,Email,Password) values(?,?,?)");
			psmt.setString(1, username);
			psmt.setString(2, email);
			psmt.setString(3, password);
			int i =psmt.executeUpdate();
			if(i>0) {
				RequestDispatcher rd = request.getRequestDispatcher("showdata.jsp");
				rd.forward(request, response);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		doGet(request, response);
	}

}



package Sql_Con;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * Servlet implementation class login_validation1
 */
@WebServlet("/login_validation1")
public class login_validation1 extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public login_validation1() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Connection con;
		Datacon data = new Datacon();
		con=data.gConnection();
		String email =request.getParameter("your-email");
		String password = request.getParameter("password");
		try {
			PreparedStatement psmt=con.prepareStatement("select * from application where Email=? and Password=?");
			psmt.setString(1, email);
			psmt.setString(2, password);
			ResultSet rs=psmt.executeQuery();
			Boolean b=rs.next();
			if(b==true) {
				RequestDispatcher rd=request.getRequestDispatcher("showdata.jsp");
				rd.forward(request, response);
			}else {
				RequestDispatcher rd1=request.getRequestDispatcher("Login1.jsp");
				rd1.forward(request, response);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}



package Sql_Con;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * Servlet implementation class update
 */
@WebServlet("/update")
public class update extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public update() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		Connection con;
		Datacon data = new Datacon();
		con=data.gConnection();
		String id1 = request.getParameter("id");
		int i = Integer.parseInt(id1);
		String name = request.getParameter("fullname");
		String email = request.getParameter("email");
		String password = request.getParameter("pass");
		try {
			PreparedStatement psmt = con.prepareStatement("update application set Fullname=?, Email=?, Password=? where Id=?");
			psmt.setString(1, name);
			psmt.setString(2, email);
			psmt.setString(3, password);
			psmt.setInt(4, i);
			int j = psmt.executeUpdate();
			if(j>0) {
				RequestDispatcher rd=request.getRequestDispatcher("showdata.jsp");
				rd.forward(request, response);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}



<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="Sql_Con.Datacon"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<%
String id=request.getParameter("id");
Connection con;
Datacon data =new Datacon();
con=data.gConnection();
PreparedStatement psmt=con.prepareStatement("select * from application where id = ?");
int i = Integer.parseInt(id);
psmt.setInt(1, i);
ResultSet rs= psmt.executeQuery();
while(rs.next()){

%>
<form action="update" method="get">
	<table>
	<tr>
	<td>
	<input type="hidden" value="<%=rs.getInt(1)%>" name="id">
	</td>
	</tr>
	<tr>
		<td>Fullname</td>
		<td><input type="text" value="<%=rs.getString("Fullname")%>" name ="fullname"></td>
	</tr>
	<tr>
		<td>Email</td>
	<td><input type="text" value="<%=rs.getString("Email")%>" name ="email"></td>
	</tr>
	<tr>
		<td>Password</td>
		<td><input type="text" value="<%=rs.getString("Password")%>"name ="pass"></td>	
	</tr>
	<tr>
	<td><input type="submit" value="update"></td>
	</tr>	
		
<%
}
%>
</body>
</html>



<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<head>
	<meta charset="utf-8">
	<title>Form-v5 by Colorlib</title>
	<!-- Mobile Specific Metas -->
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	<!-- Font-->
	<link rel="stylesheet" type="text/css" href="css/roboto-font.css">
	<link rel="stylesheet" type="text/css" href="fonts/font-awesome-5/css/fontawesome-all.min.css">
	<!-- Main Style Css -->
    <link rel="stylesheet" href="css/style.css"/>
</head>
<body class="form-v5">
	<div class="page-content">
		<div class="form-v5-content">
			<form class="form-detail" action="login_validation1" method="get">
				<h2>Login Form</h2>
				
				<div class="form-row">
					<label for="your-email">Your Email</label>
					<input type="text" name="your-email" id="your-email" class="input-text" placeholder="Your Email">
					<i class="fas fa-envelope"></i>
				</div>
				<div class="form-row">
					<label for="password">Password</label>
					<input type="password" name="password" id="password" class="input-text" placeholder="Your Password">
					<i class="fas fa-lock"></i>
				</div>
				<div class="form-row-last">
					<input type="submit" name="login" class="register" value="Login">
					Already User ?<a href="Register.jsp">Sign up </a>
				</div>
			</form>
		</div>
	</div>
</body>
</html>


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Form-v5 by Colorlib</title>
	<!-- Mobile Specific Metas -->
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	<!-- Font-->
	<link rel="stylesheet" type="text/css" href="css/roboto-font.css">
	<link rel="stylesheet" type="text/css" href="fonts/font-awesome-5/css/fontawesome-all.min.css">
	<!-- Main Style Css -->
    <link rel="stylesheet" href="css/style.css"/>
</head>
<body class="form-v5">
	<div class="page-content">
		<div class="form-v5-content">
			<form class="form-detail" action="insertdata" method="post">
				<h2>Register Account Form</h2>
				<div class="form-row">
					<label for="full-name">Full Name</label>
					<input type="text" name="full-name" id="full-name" class="input-text" placeholder="Your Name" required>
					<i class="fas fa-user"></i>
				</div>
				<div class="form-row">
					<label for="your-email">Your Email</label>
					<input type="text" name="your-email" id="your-email" class="input-text" placeholder="Your Email" required pattern="[^@]+@[^@]+.[a-zA-Z]{2,6}">
					<i class="fas fa-envelope"></i>
				</div>
				<div class="form-row">
					<label for="password">Password</label>
					<input type="password" name="password" id="password" class="input-text" placeholder="Your Password" required>
					<i class="fas fa-lock"></i>
				</div>
				<div class="form-row-last">
					<input type="submit" name="register" class="register" value="Register">
				</div>
			</form>
		</div>
	</div>
</body><!-- This templates was made by Colorlib (https://colorlib.com) -->
</html>
</body>
</html>



<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="Sql_Con.Datacon"%>
<%@page import="java.sql.Connection"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<table border="1">
<tr>
<th> ID</th>
<th> Fullname</th>
<th> Email</th>
<th>Password</th>
</tr>
<%
Connection con;
Datacon data =new Datacon();
con=data.gConnection();
PreparedStatement psmt = con.prepareStatement("select * from application");
ResultSet rs= psmt.executeQuery();
while(rs.next()){
	%>
	<tr>
	<td> <%=rs.getInt(1) %></td>
	<td><%=rs.getString("Fullname") %></td>
	<td><%=rs.getString("Email") %></td>
	<td><%=rs.getString("Password") %></td>
	<td><a href="editdata.jsp?name=edit&id=<%=rs.getInt(1)%>">Edit</a></td>
	<td><a href="deletedata?name=delete&id=<%=rs.getInt(1) %>">Delete</a></td>
	</tr>
	<%
}
%>

</body>
</html>
